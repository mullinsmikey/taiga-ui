.textfield-host() {
    .text-basic();
    position: relative;
    display: block;
    border-radius: var(--tui-radius-m);
    text-align: left;

    &[data-tui-host-size='s'] {
        height: var(--tui-height-s);
        min-height: var(--tui-height-s);
        max-height: var(--tui-height-s);
    }

    &[data-tui-host-size='m'] {
        height: var(--tui-height-m);
        min-height: var(--tui-height-m);
        max-height: var(--tui-height-m);
    }

    &[data-tui-host-size='l'] {
        height: var(--tui-height-l);
        min-height: var(--tui-height-l);
        max-height: var(--tui-height-l);
        font-size: 0.9375rem;
    }
}

.textfield-content() {
    display: flex;
    height: 100%;
    width: 100%;
    padding: 0 var(--tui-padding-m);
    box-sizing: border-box;
    align-items: center;
    overflow: hidden;

    :host[data-tui-host-size='s'] & {
        padding: 0 var(--tui-padding-s);
    }

    :host[data-tui-host-size='l'] & {
        padding: 0 var(--tui-padding-l);
    }

    &:after {
        content: '';
        margin-right: -0.25rem;
    }

    :host[data-tui-host-size='m'] &:after {
        display: none;
    }
}

.textfield-input() {
    .text-basic();
    .clearinput();
    .fullsize();
    padding: 0 var(--tui-padding-m);
    border: 0 solid transparent;
    text-align: inherit;
    box-sizing: border-box;
    white-space: nowrap;
    overflow: hidden;
    text-transform: inherit;

    :host[data-mode='onDark'] & {
        .autofill(dark);
    }

    :host[data-tui-host-size='s'] & {
        padding: 0 var(--tui-padding-s);
    }

    :host[data-tui-host-size='l'] & {
        padding: 0 var(--tui-padding-l);
    }

    :host._disabled & {
        // @bad TODO: research why you can reach disabled textfield with mask inside a label without that
        pointer-events: none;
    }

    :host._right-aligned & {
        text-align: right;
    }

    :host[data-tui-host-size='l']:not(._label-outside) & {
        padding-top: 1.25rem;

        // Workaround for raising placeholder in temporary autofill
        &:-webkit-autofill + .content .placeholder {
            font-size: 0.8156rem;
            transform: translateY(-0.625rem);
        }
    }

    :host[data-tui-host-size='m']:not(._label-outside) & {
        padding-top: 1.125rem;

        // Workaround for raising placeholder in temporary autofill
        &:-webkit-autofill + .content .placeholder {
            font-size: 0.69rem;
            transform: translateY(-0.5rem);
        }
    }
}

.textfield-wrapper() {
    flex: 1;
    min-width: 0;
    padding-right: 0.25rem;
    padding-inline-end: 0.25rem;
    padding-inline-start: 0;
}

.textfield-placeholder() {
    .transition(~'transform, font-size, color, letter-spacing');
    .text-basic();
    .text-overflow();
    display: block;
    width: 100%;
    font-size: 0.8125rem;
    user-select: none;
    color: var(--tui-text-02);
    pointer-events: none;

    &_raised {
        transform: translateY(-0.625rem);

        :host[data-tui-host-size='m'] & {
            font-size: 0.69rem;
            transform: translateY(-0.5rem);
            letter-spacing: 0.025rem;
        }

        :host._invalid:not(._focused) &,
        :host._invalid:not(._focused)._hovered & {
            color: var(--tui-error-fill);
        }

        :host[data-mode='onDark']._invalid:not(._focused) &,
        :host[data-mode='onDark']._invalid:not(._focused)._hovered & {
            color: var(--tui-error-fill-night);
        }
    }

    :host._focused &,
    :host[data-tui-host-size='m']._focused._label-outside &,
    :host[data-tui-host-size='l']._focused._label-outside & {
        color: var(--tui-text-03);
    }

    :host[data-tui-host-size='l'] & {
        font-size: 0.9375rem;

        &_raised {
            font-size: 0.8156rem;
        }
    }

    :host[data-tui-host-size='m']._focused:not(._label-outside) &,
    :host[data-tui-host-size='l']._focused:not(._label-outside) & {
        color: var(--tui-text-01);
    }

    /* stylelint-disable selector-max-specificity */
    // textfield-light
    :host[data-mode='onDark'] & {
        color: var(--tui-text-02-night);
    }

    :host[data-tui-host-size='m'][data-mode='onDark']._focused:not(._label-outside) &,
    :host[data-tui-host-size='l'][data-mode='onDark']._focused:not(._label-outside) & {
        color: var(--tui-text-01-night);
    }

    :host[data-mode='onDark']._focused &,
    :host[data-tui-host-size='m'][data-mode='onDark']._focused._label-outside &,
    :host[data-tui-host-size='l'][data-mode='onDark']._focused._label-outside & {
        color: var(--tui-text-02-night);
    }
    /* stylelint-enable selector-max-specificity */
}

.input-icon() {
    display: flex;
    width: 1.5rem;
    height: 1.5rem;
    align-items: center;
    justify-content: center;
    color: var(--tui-text-03);

    :host[data-mode='onDark'] & {
        color: var(--tui-text-03-night);
    }
}

.icon-button() {
    .transition(all);
    .input-icon();
    position: relative;
    box-sizing: border-box;
    cursor: pointer;
    transition-property: color, transform;

    &:hover {
        color: var(--tui-text-02);
    }

    :host._readonly &,
    :host._disabled & {
        pointer-events: none;
    }

    :host[data-mode='onDark'] & {
        color: var(--tui-text-03-night);

        &:hover {
            color: var(--tui-text-01-night);
        }
    }
}

.textfield() {
    :host {
        .textfield-host();
    }

    .input {
        .textfield-input();
    }

    .filler {
        vertical-align: middle;
    }

    .content {
        .textfield-content();
    }

    .wrapper {
        .textfield-wrapper();
    }

    .placeholder {
        .textfield-placeholder();

        /* Safari 9+ */
        @supports (-webkit-hyphens: none) {
            & {
                transition-property: transform, color, letter-spacing;
            }
        }
    }

    .cleaner {
        .icon-button();
    }

    // @bad TODO: Refactor this and interactive icons together
    .icon {
        .input-icon();

        &_left {
            margin: 0 2 * @space 0 -@space;
            margin-inline-start: -@space;
            margin-inline-end: 2 * @space;

            :host[data-tui-host-size='s'] & {
                margin-right: @space;
                margin-inline-end: @space;
            }
        }
    }
}
